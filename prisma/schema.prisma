generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Request {
  id              String        @id @default(cuid())
  songTitle       String
  artist          String
  tableOrName     String?
  status          RequestStatus @default(PENDING)
  votes           Int           @default(0)
  sortIndex       Int           @default(0)
  fingerprintHash String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  voteRecords     Vote[]
}

model Vote {
  id        String   @id @default(cuid())
  requestId String
  request   Request  @relation(fields: [requestId], references: [id], onDelete: Cascade)
  ipHash    String
  createdAt DateTime @default(now())
}

model User {
  id   String   @id @default(cuid())
  name String
  role UserRole
}

model Survey {
  id            String           @id @default(cuid())
  name          String
  slug          String           @unique
  description   String?
  status        SurveyStatus     @default(DRAFT)
  effectiveFrom DateTime?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  questions     SurveyQuestion[]
  responses     SurveyResponse[]
}

model SurveyQuestion {
  id        String       @id @default(cuid())
  surveyId  String
  survey    Survey       @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  type      QuestionType
  label     String
  required  Boolean      @default(false)
  order     Int
  helpText  String?
  options   Json?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model SurveyResponse {
  id        String   @id @default(cuid())
  surveyId  String
  survey    Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  answers   Json
  completed Boolean  @default(true)
  createdAt DateTime @default(now())
}

enum SurveyStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum QuestionType {
  SHORT_TEXT
  LONG_TEXT
  EMAIL
  PHONE
  DATE
  SINGLE_CHOICE
  MULTIPLE_CHOICE
}

enum RequestStatus {
  PENDING
  PLAYING
  DONE
  REJECTED
}

enum UserRole {
  DJ
  ADMIN
  PATRON
}
